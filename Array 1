#include <stdio.h>
#include <stdlib.h>

void displayArray(int *arr, int size) {
    printf("Array Contents: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int* insertByPosition(int *arr, int *size, int pos, int key) {
    (*size)++;
    arr = (int*)realloc(arr, (*size) * sizeof(int));
    for (int i = *size - 1; i > pos; i--) {
        arr[i] = arr[i - 1];
    }
    arr[pos] = key;
    return arr;
}

int* deleteByKey(int *arr, int *size, int key) {
    int i, j;
    for (i = 0; i < *size; i++) {
        if (arr[i] == key) {
            for (j = i; j < *size - 1; j++) {
                arr[j] = arr[j + 1];
            }
            (*size)--;
            arr = (int*)realloc(arr, (*size) * sizeof(int));
            break;
        }
    }
    return arr;
}

int searchByPosition(int *arr, int size, int pos) {
    if (pos < 0 || pos >= size) {
        printf("Invalid position.\n");
        return -1;
    }
    return arr[pos];
}

void reverseArray(int *arr, int size) {
    int temp;
    for (int i = 0; i < size / 2; i++) {
        temp = arr[i];
        arr[i] = arr[size - 1 - i];
        arr[size - 1 - i] = temp;
    }
}

int main() {
    int *arr = NULL;
    int size = 0, choice, pos, key;

    do {
        printf("\nMenu:");
        printf("\n1. Insert by position");
        printf("\n2. Delete by key");
        printf("\n3. Search by position");
        printf("\n4. Reverse the contents");
        printf("\n5. Display array");
        printf("\n6. Exit");
        printf("\nEnter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("\nEnter position and key to insert: ");
                scanf("%d %d", &pos, &key);
                arr = insertByPosition(arr, &size, pos, key);
                displayArray(arr, size);
                break;
            case 2:
                printf("\nEnter key to delete: ");
                scanf("%d", &key);
                arr = deleteByKey(arr, &size, key);
                displayArray(arr, size);
                break;
            case 3:
                printf("\nEnter position to search: ");
                scanf("%d", &pos);
                int found = searchByPosition(arr, size, pos);
                if (found != -1) {
                    printf("Element at position %d: %d\n", pos, found);
                }
                break;
            case 4:
                printf("\nReversing the array contents.\n");
                reverseArray(arr, size);
                displayArray(arr, size);
                break;
            case 5:
                displayArray(arr, size);
                break;
            case 6:
                printf("\nExiting program...\n");
                break;
            default:
                printf("\nInvalid choice! Please enter a valid option.\n");
        }
    } while (choice != 6);

    free(arr); // Free allocated memory
    return 0;
}
